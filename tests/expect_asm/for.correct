.ORIG x3000
LD R5, BOTTOM_OF_STACK
LD R6, BOTTOM_OF_STACK
JSR main
HALT
BOTTOM_OF_STACK .FILL xF000
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; int main()
main
ADD R6, R6, #-1
PUSH R7
PUSH R5
.COPY R5, R6
ADD R6, R6, #-1
; end of prologue
.ZERO R0
STR R0, R5, #-1
BR main_for_cond
main_for_begin
LD R0, imm76
OUT
LDR R0, R5, #-1 ; load i
ADD R0, R0, #1
STR R0, R5, #-1 ; store i
main_for_cond
LDR R0, R5, #-1 ; load i
ADD R0, R0, #-5
BRn main_for_begin
; epilogue
main_ret
ADD R6, R6, #1
POP R5
POP R7
RET
imm76 .FILL 0x76
.END
